/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ComptrollerV2Storage,
  ComptrollerV2StorageInterface,
} from "../ComptrollerV2Storage";

const _abi = [
  {
    inputs: [],
    name: "_borrowGuardianPaused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_mintGuardianPaused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "accountAssets",
    outputs: [
      {
        internalType: "contract CToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "borrowGuardianPaused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "closeFactorMantissa",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "comptrollerImplementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "liquidationIncentiveMantissa",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "markets",
    outputs: [
      {
        internalType: "bool",
        name: "isListed",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "collateralFactorMantissa",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "liquidationThresholdMantissa",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "collateralFactorMantissaVip",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "liquidationThresholdMantissaVip",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isComped",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "isPrivate",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "onlyWhitelistedBorrow",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxAssets",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "mintGuardianPaused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "oracle",
    outputs: [
      {
        internalType: "contract PriceOracle",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pauseGuardian",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingAdmin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingComptrollerImplementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "seizeGuardianPaused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "transferGuardianPaused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506103f5806100206000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c80638e8f294b116100a2578063dce1544911610071578063dce15449146102c9578063dcfbc0c7146102dc578063e6653f3d146102ef578063e875544614610303578063f851a4401461030c57600080fd5b80638e8f294b146101fb57806394b2294b14610299578063ac0b0bb7146102a2578063bb82aa5e146102b657600080fd5b80636d154ea5116100de5780636d154ea51461018e578063731f0c2b146101b15780637dc0d1d0146101d457806387f76303146101e757600080fd5b806324a3d6221461011057806326782247146101405780633c94786f146101535780634ada90af14610177575b600080fd5b600a54610123906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b600154610123906001600160a01b031681565b600a5461016790600160a01b900460ff1681565b6040519015158152602001610137565b61018060065481565b604051908152602001610137565b61016761019c366004610373565b600c6020526000908152604090205460ff1681565b6101676101bf366004610373565b600b6020526000908152604090205460ff1681565b600454610123906001600160a01b031681565b600a5461016790600160b01b900460ff1681565b610256610209366004610373565b60096020526000908152604090208054600182015460028301546003840154600485015460069095015460ff94851695939492939192818116916101008104821691620100009091041688565b60408051981515895260208901979097529587019490945260608601929092526080850152151560a0840152151560c0830152151560e082015261010001610137565b61018060075481565b600a5461016790600160b81b900460ff1681565b600254610123906001600160a01b031681565b6101236102d7366004610395565b61031f565b600354610123906001600160a01b031681565b600a5461016790600160a81b900460ff1681565b61018060055481565b600054610123906001600160a01b031681565b6008602052816000526040600020818154811061033b57600080fd5b6000918252602090912001546001600160a01b03169150829050565b80356001600160a01b038116811461036e57600080fd5b919050565b60006020828403121561038557600080fd5b61038e82610357565b9392505050565b600080604083850312156103a857600080fd5b6103b183610357565b94602093909301359350505056fea26469706673582212209b7cc5ef3c869397e9a9f7e01920b7992ec8c0c7ba8d8fd3dbde75ba053e41cd64736f6c634300080a0033";

export class ComptrollerV2Storage__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ComptrollerV2Storage> {
    return super.deploy(overrides || {}) as Promise<ComptrollerV2Storage>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ComptrollerV2Storage {
    return super.attach(address) as ComptrollerV2Storage;
  }
  connect(signer: Signer): ComptrollerV2Storage__factory {
    return super.connect(signer) as ComptrollerV2Storage__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ComptrollerV2StorageInterface {
    return new utils.Interface(_abi) as ComptrollerV2StorageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ComptrollerV2Storage {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ComptrollerV2Storage;
  }
}
